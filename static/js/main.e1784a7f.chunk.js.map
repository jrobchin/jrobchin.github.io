{"version":3,"sources":["components/nav-bar.component.js","components/fade-text-changer.component.js","components/hero.component.js","components/site-section.component.js","components/experience-card.component.js","data/experience.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDropdown","setState","mobileDropdown","state","handleScrollTo","section","scrollTo","_this2","react_default","a","createElement","className","role","ref","domRef","id","onClick","concat","data-target","href","Component","FadeTextChanger","componentDidMount","setInterval","isVisible","textIndex","textList","length","fader","posed","span","visible","opacity","hidden","pose","SUBTITLES","Hero","subtitles","fade_text_changer_component","SiteSection","title","sectionRef","children","ExperienceCard","_this$props","img","company","position","location","dates","src","experience","App","scrollTop","sectionRefs","current","offsetTop","window","top","left","behavior","renderExperience","cards","i","e","push","experience_card_component","key","navRef","React","createRef","hero","projects","nav_bar_component","style","marginTop","hero_component","site_section_component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1784a7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NavBar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileDropdown: false,\n    };\n  }\n  \n  toggleDropdown = () => {\n    this.setState({\n      mobileDropdown: !this.state.mobileDropdown\n    });\n  }\n\n  handleScrollTo = (section) => {\n    this.toggleDropdown();\n    this.props.scrollTo(section);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" ref={this.props.domRef}>\n        <div className=\"navbar-brand\">\n          <div id=\"navbar-item-name\" className=\"navbar-item\">\n            <button className=\"is-link\" onClick={() => this.handleScrollTo('hero')}>\n              jason chin\n            </button>\n          </div>\n\n          <button onClick={this.toggleDropdown} className={`navbar-burger burger is-link ${this.state.mobileDropdown ? 'is-active' : ''}`} data-target=\"nav-bar\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n\n        <div id=\"nav-bar\" className={`navbar-menu ${this.state.mobileDropdown ? 'is-active' : ''}`}>\n          <div className=\"navbar-start\">\n            <div className=\"navbar-item\">\n              <button className=\"is-link section-link\" onClick={() => this.handleScrollTo('experience')}>\n                experience\n              </button>\n            </div>\n\n            <div className=\"navbar-item\">\n              <button className=\"is-link section-link\" onClick={() => this.handleScrollTo('projects')}>\n                projects\n              </button>\n            </div>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <a className=\"github-link\" href=\"https://github.com/jrobchin\">\n                github\n              </a>\n            </div>\n\n            <div className=\"navbar-item\">\n              <a className=\"linkedin-link\" href=\"https://linkedin.com/in/jrobchin\">\n                linkedin\n              </a>\n            </div>\n\n            <div className=\"navbar-item\">\n              <a className=\"devpost-link\" href=\"https://devpost.com/JasonChin\">\n                devpost\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n \nexport default NavBar;","import React, { Component } from 'react';\nimport posed from 'react-pose';\n\nclass FadeTextChanger extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textIndex: 0,\n      isVisible: true \n    };\n    this.fader = posed.span({\n      visible: { opacity: 1 },\n      hidden: { opacity: 0 }\n    });\n  }\n\n  componentDidMount = () => {\n    setInterval(() => {\n\n      /* If it's visible change the text, otherwise just make it not visible */\n      if (this.state.isVisible) {\n        this.setState({ \n          isVisible: false,\n        });\n      } else {\n        this.setState({ \n          isVisible: true,\n          textIndex: (this.state.textIndex + 1) % this.props.textList.length,\n        });\n      }\n\n    }, 900);\n  }\n\n  render() {\n    return (\n      <this.fader pose={this.state.isVisible ? 'visible' : 'hidden'}>{this.props.textList[this.state.textIndex]}</this.fader>\n    );\n  }\n}\n\nexport default FadeTextChanger;","import React, { Component } from 'react';\nimport FadeTextChanger from './fade-text-changer.component';\n\nconst SUBTITLES = [\n  'software engineer',\n  'ai developer',\n  'educator',\n  'creator',\n];\n\nclass Hero extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitles: SUBTITLES\n    };\n  }\n\n  render() { \n    return (\n      <div className=\"hero\">\n        <section className=\"hero is-medium is-primary\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <p className=\"title is-1\">\n                jason chin\n              </p>\n              <p className=\"subtitle\">\n                <FadeTextChanger \n                  textList={this.state.subtitles}\n                />\n              </p>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n \nexport default Hero;","import React, { Component } from 'react';\n\nclass SiteSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() { \n    let { title } = this.props;\n    return (\n      <div className=\"site-section\" ref={this.props.sectionRef}>\n        <section className=\"section\">\n          <div className=\"header\">\n            <h1 className=\"title is-2\">{title}</h1>\n          </div>\n          <div className=\"content\">\n            {this.props.children}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n \nexport default SiteSection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ExperienceCard extends Component {\n  render() {\n\n    let { img, company, position, location, dates, length } = this.props;\n\n    return (\n      <div className=\"card experience-card\">\n        <article className=\"media\">\n          <figure className=\"media-left\">\n            <p className=\"image\">\n              <img src={img} />\n            </p>\n          </figure>\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <h1 className=\"title\">{position}</h1>\n              <p>\n                {company} - {location}\n                <br/>\n                <small>{dates} <i className=\"fas fa-caret-right\"></i> {length}</small>\n                <br/>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin ornare magna eros, eu pellentesque tortor vestibulum ut. Maecenas non massa sem. Etiam finibus odio quis feugiat facilisis.\n              </p>\n            </div>\n          </div>\n          <div className=\"media-right\">\n            <button className=\"button is-white\">\n              <i className=\"fas fa-angle-down\"></i>\n            </button>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nExperienceCard.propTypes = {\n  img: PropTypes.string,\n  company: PropTypes.string,\n  position: PropTypes.string,\n  location: PropTypes.string,\n  dates: PropTypes.string,\n  length: PropTypes.string,\n  description: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ])\n}\n \nexport default ExperienceCard;","export default [\n  {\n    img: \"/img/DLR-logo.png\",\n    position: \"Undergraduate Researcher\",\n    company: \"German Aerospace Center (DLR)\",\n    location: \"Berlin, Germany\",\n    dates: \"May 2018 - Aug 2018\",\n    length: \"4 months\",\n  },\n  {\n    img: \"/img/Condos-logo.png\",\n    position: \"Full Stack Developer Intern\",\n    company: \"condos.ca\",\n    location: \"Toronto, Canada\",\n    dates: \"May 2017 - Sept 2017\",\n    length: \"5 months\",\n  },\n  {\n    img: \"/img/Condos-logo.png\",\n    position: \"Full Stack Developer Intern\",\n    company: \"condos.ca\",\n    location: \"Toronto, Canada\",\n    dates: \"May 2017 - Sept 2017\",\n    length: \"5 months\",\n  },\n  {\n    img: \"/img/Condos-logo.png\",\n    position: \"Full Stack Developer Intern\",\n    company: \"condos.ca\",\n    location: \"Toronto, Canada\",\n    dates: \"May 2017 - Sept 2017\",\n    length: \"5 months\",\n  },\n];","import React, { Component } from 'react';\nimport './sass/app.scss';\n\n// Components\nimport NavBar from './components/nav-bar.component';\nimport Hero from './components/hero.component';\nimport SiteSection from './components/site-section.component';\nimport ExperienceCard from './components/experience-card.component';\n\n// Data\nimport experience from './data/experience';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.navRef = React.createRef();\n    this.sectionRefs = {\n      hero: React.createRef(),\n      experience: React.createRef(),\n      projects: React.createRef(),\n    };\n  }\n\n  scrollTo = (section) => {\n    let scrollTop;\n    if (section === \"hero\") {\n      scrollTop = 0;\n    } else {\n      scrollTop = this.sectionRefs[section].current.offsetTop - 53;\n    }\n    window.scrollTo({top: scrollTop, left: 0, behavior: \"smooth\"});\n  }\n\n  renderExperience = () => {\n    let cards = [];\n    \n    for (let i = 0; i < experience.length; i++) {\n      const e = experience[i];\n      cards.push(\n        <ExperienceCard\n          key={i}\n          img={e.img}\n          position={e.position}\n          company={e.company}\n          location={e.location}\n          dates={e.dates}\n          length={e.length}\n        />\n      );\n    }\n\n    return cards;\n  }\n\n  render() {\n    return (\n      <div id=\"site-container\">\n      \n        <NavBar domRef={this.navRef} scrollTo={this.scrollTo}/>\n\n        <main style={{marginTop: 52}}>\n\n          <Hero />\n\n          <SiteSection title=\"experience\" sectionRef={this.sectionRefs.experience}>\n            {this.renderExperience()}\n          </SiteSection>\n\n          <SiteSection title=\"projects\" sectionRef={this.sectionRefs.projects}>\n            site section\n            {this.renderExperience()}\n          </SiteSection>\n          \n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}